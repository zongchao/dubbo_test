<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>dubbo_test</groupId>
    <artifactId>dubbo_test</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>testdubbo-facade-test</module>
        <module>testdubbo-common-queue</module>
        <module>testdubbo-web-test</module>
        <module>testdubbo-service-test</module>
        <module>testdubbo-common-redis</module>
        <module>testdubbo-common-config</module>
        <module>testdubbo-common-core</module>
    </modules>
    <properties>
        <org.springframework.version>RELEASE</org.springframework.version>
    </properties>




    <build>
        <!--<resources>-->
        <!--&lt;!&ndash; 通过此配置可以过滤或者包含对应的配置文件 &ndash;&gt;-->
        <!--<resource>-->
        <!--<directory>src/main/resources</directory>-->
        <!--<includes>-->
        <!--<include>**/*.xml</include>-->
        <!--<include>**/*.properties</include>-->
        <!--</includes>-->
        <!--<filtering>true</filtering>-->
        <!--</resource>-->
        <!--<resource>-->
        <!--<directory>src/main/java</directory>-->
        <!--<includes>-->
        <!--<include>**/*.xml</include>-->
        <!--</includes>-->
        <!--<filtering>true</filtering>-->
        <!--</resource>-->
        <!--</resources>-->

        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                        <encoding>UTF-8</encoding>
                        <fork>true</fork>
                        <meminitial>512m</meminitial>
                        <maxmem>1048m</maxmem>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <skipTests>true</skipTests>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <!-- 在dependencys中管理的包，全部子项目全部依赖 -->
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!-- 在dependencyManagement中管理的包，子项目挑选对应使用的包来引用 -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>dubbo_test</groupId>
                <artifactId>testdubbo-common-config</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>dubbo_test</groupId>
                <artifactId>testdubbo-common-core</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>

            <!-- dubbo相关依赖 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>dubbo</artifactId>
                <version>2.5.3</version>
                <exclusions>
                    <exclusion>
                        <artifactId>spring</artifactId>
                        <groupId>org.springframework</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>3.4.6</version>
            </dependency>

            <dependency>
                <groupId>com.github.sgroschupf</groupId>
                <artifactId>zkclient</artifactId>
                <version>0.1</version>
            </dependency>
            <!-- dubbo相关依赖 -->

            <!-- spring 相关依赖 -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>
            <!-- 提供@Service @Component等注解 -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aspects</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>
            <!-- spring核心 -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>
            <!-- 用于junit单元测试时加载spring配置文件 -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <scope>test</scope>
                <version>${org.springframework.version}</version>
            </dependency>

            <!-- spring消息管理，用于管理消息队列-->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jms</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>

            <!-- 用于持久层操作 目前读写分离中用到-->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>
            <!-- 用于面向切面开发 目前读写分离中用到-->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aspects</artifactId>
                <version>${org.springframework.version}</version>
                <type>jar</type>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${org.springframework.version}</version>
                <type>jar</type>
                <scope>compile</scope>
            </dependency>
            <!-- spring 相关依赖 -->

            <!--  消息队列相关 -->
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>jsr250-api</artifactId>
                <version>1.0</version>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-all</artifactId>
                <version>5.9.0</version>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-pool</artifactId>
                <version>5.9.0</version>
            </dependency>
            <!--  消息队列相关 -->

            <!-- 缓存jedis-->
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-redis</artifactId>
                <version>1.6.6.RELEASE</version>
            </dependency>
            <!--<dependency>-->
            <!--<groupId>redis.clients</groupId>-->
            <!--<artifactId>jedis</artifactId>-->
            <!--<version>2.4.0</version>-->
            <!--<type>jar</type>-->
            <!--<scope>compile</scope>-->
            <!--</dependency>-->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>2.4.2</version>
            </dependency>

            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>3.2.0</version>
            </dependency>
            <!-- 缓存jedis-->

            <!-- 其他工具类 -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>20.0</version>
            </dependency>

            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.16</version>
            </dependency>

            <!-- 其他工具类 -->


            <!-- mybatis包-->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>3.2.7</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>1.2.4</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>5.1.26</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>1.0.2</version>
            </dependency>
            <!-- mybatis包-->
        </dependencies>
    </dependencyManagement>


    <profiles>
        <!--开发环境中包含properties文件-->
        <profile>
            <id>dev</id>
            <build>
                <resources>
                    <!-- 通过此配置可以过滤或者包含对应的配置文件 -->
                    <resource>
                        <directory>src/main/resources</directory>
                        <includes>
                            <include>**/*.xml</include>
                            <include>**/*.properties</include>
                        </includes>
                        <filtering>true</filtering>
                    </resource>
                    <!-- 此处配置的目的是将java文件夹中的 mybatis配置文件引入项目中-->
                    <resource>
                        <directory>src/main/java</directory>
                        <includes>
                            <include>**/*.xml</include>
                        </includes>
                        <filtering>true</filtering>
                    </resource>
                    <!--此处配置将env/dev文件夹中的配置文件复制到classes中的properties文件夹中-->
                    <resource>
                        <directory>env/dev</directory>
                        <targetPath>properties</targetPath>
                        <includes>
                            <include>**/*.properties</include>
                        </includes>
                    </resource>
                </resources>
            </build>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>prod</id>
            <build>
                <resources>
                    <!-- 通过此配置可以过滤或者包含对应的配置文件 -->
                    <resource>
                        <directory>src/main/resources</directory>
                        <includes>
                            <include>**/*.xml</include>
                            <include>**/*.properties</include>
                        </includes>
                        <!--<excludes>-->
                        <!--<exclude>**/*.properties</exclude>-->
                        <!--</excludes>-->
                        <filtering>true</filtering>
                    </resource>
                    <!-- 此处配置的目的是将java文件夹中的 mybatis配置文件引入项目中-->
                    <resource>
                        <directory>src/main/java</directory>
                        <includes>
                            <include>**/*.xml</include>
                        </includes>
                        <filtering>true</filtering>
                    </resource>
                    <!--此处配置将env/prod-->
                    <resource>
                        <directory>env/prod</directory>
                        <targetPath>properties</targetPath>
                        <includes>
                            <include>**/*.properties</include>
                        </includes>
                    </resource>
                </resources>
            </build>
        </profile>
    </profiles>
</project>